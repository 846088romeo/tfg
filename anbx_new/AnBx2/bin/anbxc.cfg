# AnBx compiler configuration file
# All entries must be lowercase!
# ------------------------------
# Java Code Generation Parameters
# ------------------------------
# Note: on Windows use / as path separator instead of \
# Directory path where templates for Java code generation are located
pathstemplates = ../STemplates
# Destination path for generated Java code
pathjavadest = ../../genAnBx/src/
# Directory where VDM code is generated
pathvdmdest = ../../casestudies/
# Path to the standard theory file for use with the OFMC tool
pathofmcstdeqtheory = ../../ext-tools/std.thy
# Default path for protocol pre-shared resources (e.g. symmetric shared keys)
sharepathdefault = ./
# Default path for keystore 
keypathdefault = ../../keystore/
# Default path for AnBxJ and Bouncy Castle libraries
anbxjpathdefault = ../../../AnBxJ
# Aliases names for generating <protocolname>.properties file
# Use space as separator
aliases = alice bob charlie david eve frank grace
# Public static functions names already available in the Functions.st file
# Use space as separator
functionsst = pre succ add sub
# Optional network parameters
# Interface name prefix for automatic detection of IP address
# Common prefixes: "eth" / "wifi" for win/linux, "en" for mac
# Note: when specified, the IP address has priority over the interface name
interface = eth
# Default IP address for code generation
# ipaddress = 192.168.0.31
# Default starting service port number for code generation
# startingport = 55555
# -----------------------------
# Docker Settings
# -----------------------------
# Docker image name for running AnBx services
dockerimage = anbx:1.0.0
# Docker image name for the Dolev-Yao intruder container
dockerdyimage = anbx_dy:1.0.0
# Folder locations
# Note: the resulting dockerjavaroot/dockerjavadest path should match 
# the one specified by the pathjavadest variable
# Root directory (relative path) for Java code within Docker containers
dockerjavaroot = ./../../../
# Destination directory for Java files generated within Docker containers
dockerjavadest = genAnBx/src
# Name of the shared folder within Docker containers
dockersharedfolder = app
# Base IP address for configuring the network within Docker containers (first two octets only)
dockeripbase = 10.0.0.0
# Timeout for a Docker container session (in seconds)
dockersessiontimeout = 5
# Minimum timeout for the Docker Dolev-Yao intruder container (in seconds)
dockerdymintimeout = 60
# Time interval for waiting operations in the Docker Dolev-Yao intruder container (in seconds).
dockerdyinterval = 3
# Memory limit for Docker containers
# https://docs.docker.com/config/containers/resource_constraints/
# Use suffixes like 'm' for megabytes
# Suffixes: b, k, m, g - bytes, kilobytes, megabytes, gigabytes
# Set to 0 for no memory limit
dockermemlimit = 0
# CPU quota for Docker containers. Use units like '200000' for 200,000 CPU shares
# Set to 0 for no CPU limit
dockercpuquota = 0 
# -----------------------------
# Cryptographic Engine Settings
# -----------------------------
# Java Cryptography Architecture (JCA) Reference Guide
# For more information, refer to the JCA Reference Guide:
# https://docs.oracle.com/en/java/javase/21/security/java-cryptography-architecture-jca-reference-guide.html

# To view the standard algorithm names for Java 21, visit:
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html
# Selected previous Java versions:
# https://docs.oracle.com/en/java/javase/17/docs/specs/security/standard-names.html
# https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html

# Information about cryptographic specifications can also be found at:
# Bouncy Castle - https://www.bouncycastle.org/specifications.html
# Bouncy Castle - https://github.com/bcgit/bc-java/blob/main/docs/specifications.html

# These parameters are used to generate the <protocolname>.properties file

# Note: Signature Algorithms and (Asymmetric Encryption) Cipher Algorithms
# are automatically detected based on the keys used, which are pre-memorized in the keystore
# 
# Cipher scheme used for encryption, including algorithm name, mode, and padding, separated by /
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#cipher-algorithm-names
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#cipher-algorithm-modes
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#cipher-algorithm-paddings
cipherscheme = AES/CBC/PKCS5Padding
# to test if Bouncy Castle Library is correctly installed
# cipherscheme = ChaCha
# Key length in bits for ciphers supporting different key lengths
keysize = 256
# -------------------------------------
# Key generator algorithm for dynamic key generation in symmetric encryption
keygenerationscheme = AES
# Key length in bits for dynamic symmetric key generation, for ciphers supporting different key lengths
keygenerationsize = 256
# -------------------------------------
# Secret Key Factory algorithm used for Password-Based Encryption (PBE) dynamic symmetric key generation
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#secretkeyfactory-algorithms
keygenerationschemepbe = PBKDF2WithHmacSHA512
# -------------------------------------
# Key Pair Generator algorithm for dynamic creation of asymmetric key pairs
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#keypairgenerator-algorithms
keypairgenerationscheme = RSA
# Key length for dynamic creation of asymmetric key pairs
keypairgenerationsize = 2048
# -------------------------------------
# SecureRandom Number Generation Algorithm
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms
securerandomalgorithm = DRBG
# -------------------------------------
# (H)MAC Algorithm, used for key generation
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#mac-algorithms
hmacalgorithm = HmacSHA256
# -------------------------------------
# Message Digest Algorithm (Hash)
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#messagedigest-algorithms
messagedigestalgorithm = SHA-256
messagedigestalgorithmsignature = SHA-256
# -------------------------------------
# Key Agreement Algorithm, used for key exchange (e.g., Diffie-Hellman)
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#keyagreement-algorithms
keyagreementalgorithm = DH
# Key Pair Generation for Key Agreement Algorithm, used for key exchange (e.g., Diffie-Hellman)
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#keypairgenerator-algorithms
keyagreementkeypairgenerationscheme = DH
# Length in bits for random exponents in Diffie-Hellman key agreement
dhrndexpsize = 4096
# The elliptic curve used for ECDH key agreement
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#parameterspec-names
ecgenparameterspec = secp256r1
# -------------------------------------
# Asymmetric encryption scheme block mode (experimental)
asymcipherschemeblock = RSA
# -------------------------------------
# SSLContext Algorithm
sslcontext = TLSv1.3
#--------------------------------------
# Java Security provider: default uses the java.security settings (preferred option)
# Or select a specific provider (e.g., BC for Bouncy Castle)
securityprovider = default