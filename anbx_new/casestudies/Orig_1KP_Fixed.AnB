Protocol: Orig_1KP_Fixed

Types:
	Agent C,M;
	Agent a;		# Certified
	Number empty,Desc,Price,ID,NxNONCE;
	Symmetric_key HxRC,HxSALTC;
	SeqNumber TID,Auth;
	Function can;		# Agent,Agent ->* Number
	Function sk;		# Agent -> PublicKey
	Function hk;		# Agent -> PublicKey
	Function pk;		# Agent -> PublicKey
	Function hash;		# Untyped -> Number
	Function hmac;		# Untyped,SymmetricKey -> Number

Knowledge:
	C: C,M,a,empty,pk,hk,sk,hash,hmac,can(C,a);
	M: C,M,a,empty,pk,hk,sk,hash,hmac;
	a: C,M,a,inv(pk(a)),inv(hk(a)),inv(sk(a)),empty,pk,hk,sk,hash,hmac,can(C,a)

Actions:
	C *->* M: Price,Desc	# agree
	M *->* C: empty	# agree
	C -> M: HxSALTC,hmac(can(C,a),HxRC)
	M -> C: ID,TID,NxNONCE,hash(Price,ID,TID,NxNONCE,hmac(can(C,a),HxRC),hmac(Desc,HxSALTC))
	C -> M: {Price,hash(Price,ID,TID,NxNONCE,hmac(can(C,a),HxRC),hmac(Desc,HxSALTC)),can(C,a),HxRC}pk(a)
	M -> a: ID,TID,NxNONCE,hash(Price,ID,TID,NxNONCE,hmac(can(C,a),HxRC),hmac(Desc,HxSALTC)),hmac(Desc,HxSALTC),{Price,hash(Price,ID,TID,NxNONCE,hmac(can(C,a),HxRC),hmac(Desc,HxSALTC)),can(C,a),HxRC}pk(a)
	a -> M: Auth,{C,M,hash(Auth,hash(Price,ID,TID,NxNONCE,hmac(can(C,a),HxRC),hmac(Desc,HxSALTC)))}inv(sk(a))
	M -> C: Auth,{C,M,hash(Auth,hash(Price,ID,TID,NxNONCE,hmac(can(C,a),HxRC),hmac(Desc,HxSALTC)))}inv(sk(a))

Goals:
	can(C,a) secret between C,a
	M authenticates a on Auth
	C authenticates a on Auth
	# 	M authenticates a on Common,Auth
	M authenticates a on Price,ID,TID,NxNONCE,hmac(can(C,a),HxRC),hmac(Desc,HxSALTC),Auth
	# 	C authenticates a on Common,Auth
	C authenticates a on Price,ID,TID,NxNONCE,hmac(can(C,a),HxRC),hmac(Desc,HxSALTC),Auth
	Desc secret between C,M
	inv(pk(a)) secret between a
	inv(hk(a)) secret between a
	inv(sk(a)) secret between a
