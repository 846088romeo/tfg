(* Protocol: Fresh_From_A *)

0| A: new Msg
0| B: new Nonce
0(0)| A: witness(_auth_MSG_BA,Msg,[(B,B),(A,A)]) # side condition: False
0| A: send(B;A)	# A -> B
0| B: R0 := receive()	# A -> B
0| B: (*2*)
eq(pk(A),pk(R0))
eq(sk(A),sk(R0))

1| B: send(A;enc(<Nonce,B>,pk(R0)))	# B -> A
1| A: R1 := receive()	# B -> A
1| A: (*3*)
eq(B,proj[2/2][dec(R1,inv(pk(A)))])
inv(pk(A),inv(pk(A)))
inv(sk(A),inv(sk(A)))

2| A: send(B;sign(<proj[1/2][dec(R1,inv(pk(A)))],B,Msg>,inv(sk(A))))	# A -> B
2| B: R2 := receive()	# A -> B
2| B: (*2*)
eq(B,proj[2/3][verify(R2,sk(R0))])
eq(Nonce,proj[1/3][verify(R2,sk(R0))])

99(0)| A: secret(INVSA_A,inv(sk(A)),[(A,A)]) # side condition: False
99(0)| A: secret(INVPA_A,inv(pk(A)),[(A,A)]) # side condition: False
99(2)| B: request(_auth_MSG_BA,proj[3/3][verify(R2,sk(R0))],[(B,B),(A,R0)]) # side condition: True

