(* Protocol: SET_Rev *)
(* ProVerif/Applied-pi specification mode: PVT *)
(* Automatically generated by the *)
(* AnBx Compiler and Code Generator - Version 2025.01 *)

(* Some ProVerif settings *)
set ignoreTypes = false. 		(* true|false *)
set traceDisplay = none. 		(* short|long|none *)
set verboseRules = false. 		(* false|true *)
set verboseBase = false. 		(* true|false *)
set verboseGoalReachable = false. 		(* true|false *)
set verboseStatistics = false. 		(* true|false *)
set verboseClauses = none. 		(* short|none|explained *)
set simplifyDerivation = true. 		(* true|false *)
set abbreviateDerivation = true. 		(* true|false *)
set reconstructTrace = true. 		(* n|true|false n=4 default *)
set traceBacktracking = true. 		(* true|false *)
set preciseActions = false. 		(* true|false|trueWithoutArgsInNames *)

(* Public channel declaration *)
free ch: channel.

(* Private channel declaration *)
free ch_priv_M_C: channel [private].

(* Types *)
type Agent.
type Crypto_ByteArray.
type DHParameterSpec.
type DHSecret.
type PrivateKey.
type PublicKey.
type SealedObject.
type SealedPair.
type SecretKey.
type SignedObject.
type String.

(* Type converters *)
fun SignedObject2bitstring(SignedObject): bitstring [data,typeConverter].
reduc forall x: SignedObject; bitstring2SignedObject(SignedObject2bitstring(x)) = x.
fun Crypto_ByteArray2bitstring(Crypto_ByteArray): bitstring [data,typeConverter].
reduc forall x: Crypto_ByteArray; bitstring2Crypto_ByteArray(Crypto_ByteArray2bitstring(x)) = x.
fun SecretKey2bitstring(SecretKey): bitstring [data,typeConverter].
reduc forall x: SecretKey; bitstring2SecretKey(SecretKey2bitstring(x)) = x.
fun PrivateKey2bitstring(PrivateKey): bitstring [data,typeConverter].
reduc forall x: PrivateKey; bitstring2PrivateKey(PrivateKey2bitstring(x)) = x.

(* Projectors *)
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray; proj_1_2_BytByt_Crypto_ByteArray((x1,x2)) = x1.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray; proj_2_2_BytByt_Crypto_ByteArray((x1,x2)) = x2.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Agent; proj_1_3_BytBytAge_Crypto_ByteArray((x1,x2,x3)) = x1.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Agent; proj_2_3_BytBytAge_Crypto_ByteArray((x1,x2,x3)) = x2.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Agent; proj_3_3_BytBytAge_Agent((x1,x2,x3)) = x3.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray; proj_1_3_AgeBytByt_Agent((x1,x2,x3)) = x1.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray; proj_2_3_AgeBytByt_Crypto_ByteArray((x1,x2,x3)) = x2.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray; proj_3_3_AgeBytByt_Crypto_ByteArray((x1,x2,x3)) = x3.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Agent; proj_1_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8)) = x1.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Agent; proj_2_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8)) = x2.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Agent; proj_3_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8)) = x3.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Agent; proj_4_8_BytBytBytSePBytSePBytAge_SealedPair((x1,x2,x3,x4,x5,x6,x7,x8)) = x4.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Agent; proj_5_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8)) = x5.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Agent; proj_6_8_BytBytBytSePBytSePBytAge_SealedPair((x1,x2,x3,x4,x5,x6,x7,x8)) = x6.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Agent; proj_7_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8)) = x7.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Agent; proj_8_8_BytBytBytSePBytSePBytAge_Agent((x1,x2,x3,x4,x5,x6,x7,x8)) = x8.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_1_9_AgeBytBytBytSePBytSePBytByt_Agent((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x1.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_2_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x2.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_3_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x3.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_4_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x4.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_5_9_AgeBytBytBytSePBytSePBytByt_SealedPair((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x5.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_6_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x6.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_7_9_AgeBytBytBytSePBytSePBytByt_SealedPair((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x7.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_8_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x8.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:SealedPair,x6:Crypto_ByteArray,x7:SealedPair,x8:Crypto_ByteArray,x9:Crypto_ByteArray; proj_9_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x9.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_1_9_AgeBytBytBytBytSePBytSePByt_Agent((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x1.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_2_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x2.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_3_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x3.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_4_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x4.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_5_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x5.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_6_9_AgeBytBytBytBytSePBytSePByt_SealedPair((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x6.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_7_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x7.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_8_9_AgeBytBytBytBytSePBytSePByt_SealedPair((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x8.
reduc forall x1:Agent,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:Crypto_ByteArray,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:SealedPair,x9:Crypto_ByteArray; proj_9_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9)) = x9.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_1_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x1.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_2_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x2.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_3_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x3.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_4_10_BytBytBytSePBytSePBytBytAgeAge_SealedPair((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x4.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_5_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x5.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_6_10_BytBytBytSePBytSePBytBytAgeAge_SealedPair((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x6.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x7.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_8_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x8.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_9_10_BytBytBytSePBytSePBytBytAgeAge_Agent((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x9.
reduc forall x1:Crypto_ByteArray,x2:Crypto_ByteArray,x3:Crypto_ByteArray,x4:SealedPair,x5:Crypto_ByteArray,x6:SealedPair,x7:Crypto_ByteArray,x8:Crypto_ByteArray,x9:Agent,x10:Agent; proj_10_10_BytBytBytSePBytSePBytBytAgeAge_Agent((x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)) = x10.

(* hash/hmac functions *)
fun hash(bitstring): Crypto_ByteArray.
fun hmac(bitstring,SecretKey): Crypto_ByteArray.

(* Public key encryption *)
fun inv(PublicKey): PrivateKey [private].
fun enc(bitstring,PublicKey): SealedPair.
    reduc forall x: bitstring, y: PublicKey; dec(enc(x,y),inv(y)) = x.

(* Public key encryption *)
fun priv_pk(Agent): PrivateKey [private].
fun pk(PrivateKey): PublicKey.
fun enc_pk(bitstring,PublicKey): SealedPair.
    reduc forall x: bitstring, y: PrivateKey; dec_pk(enc_pk(x,pk(y)),y) = x.
fun priv_hk(Agent): PrivateKey [private].
fun hk(PrivateKey): PublicKey.
fun enc_hk(bitstring,PublicKey): SealedPair.
    reduc forall x: bitstring, y: PrivateKey; dec_hk(enc_hk(x,hk(y)),y) = x.

(* Signatures *)
fun priv_sk(Agent): PrivateKey [private].
fun sk(PrivateKey): PublicKey.
fun sign_sk(bitstring,PrivateKey): SignedObject.
    reduc forall m: bitstring, k: PrivateKey; getmess_sk(sign_sk(m,k)) = m.
    reduc forall m: bitstring, k: PrivateKey; verify_sk(sign_sk(m,k),sk(k)) = m.

(* Symmetric encryption *)
fun encS(bitstring,SecretKey): SealedObject.
    reduc forall x: bitstring, y: SecretKey; decS(encS(x,y),y) = x.

(* Diffie-Hellman *)
const g: DHParameterSpec [data].
fun kas(PublicKey,DHSecret): SecretKey.
fun kap(DHParameterSpec,DHSecret): PublicKey.
equation forall x: DHSecret, y: DHSecret; kas(kap(g,x),y) = kas(kap(g,y),x).

(* XOR - simple theory *)
(* Due to ProVerif limitation in handling certain types of equations, *)
(* some xor properties can not be modelled. Results may be not reliable *)
const zero: Crypto_ByteArray [data].
fun xor(Crypto_ByteArray,Crypto_ByteArray): Crypto_ByteArray.
equation forall x:Crypto_ByteArray,y:Crypto_ByteArray; xor(xor(x,y),y) = x.
equation forall x:Crypto_ByteArray; xor(x,zero) = x.
equation forall x:Crypto_ByteArray; xor(zero,x) = x.
equation forall x:Crypto_ByteArray; xor(x,x) = zero.

(* Functions *)
fun pan(Agent,Agent): Crypto_ByteArray [private].

(* Secret Goal Testing Functions *)
fun fun_goal_INVSA_a(PrivateKey): SecretKey.
fun fun_goal_INVHKA_a(PrivateKey): SecretKey.
fun fun_goal_INVPA_a(PrivateKey): SecretKey.
fun fun_goal_INVSM_M(PrivateKey): SecretKey.
fun fun_goal_INVHKM_M(PrivateKey): SecretKey.
fun fun_goal_INVPM_M(PrivateKey): SecretKey.
fun fun_goal_INVSC_C(PrivateKey): SecretKey.
fun fun_goal_INVHKC_C(PrivateKey): SecretKey.
fun fun_goal_INVPC_C(PrivateKey): SecretKey.
fun fun_goal_PANCA_Ca(Crypto_ByteArray): SecretKey.
fun fun_goal_NXAUTHCODE_CMa(Crypto_ByteArray): SecretKey.
fun fun_goal_PURCHAMT_CMa(Crypto_ByteArray): SecretKey.
fun fun_goal_ORDERDESC_CM(Crypto_ByteArray): SecretKey.
fun fun_goal_MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa(Crypto_ByteArray,Crypto_ByteArray): SecretKey.
fun fun_goal_NXLIDMNXXID_CMa(Crypto_ByteArray,Crypto_ByteArray): SecretKey.

(* Variable agents *)
free C: Agent.
free M: Agent.

(* Constants *)
const tag: Crypto_ByteArray.
const empty: Crypto_ByteArray.
const a: Agent.

(* Secrecy assumptions *)
not attacker(new Invpka).
not attacker(new Invhka).
not attacker(new Invska).

(* Goal queries *)
free InvskINVSA_a: PrivateKey [private].query attacker(InvskINVSA_a).
free InvhkINVHKA_a: PrivateKey [private].query attacker(InvhkINVHKA_a).
free InvpkINVPA_a: PrivateKey [private].query attacker(InvpkINVPA_a).
free InvskINVSM_M: PrivateKey [private].query attacker(InvskINVSM_M).
free InvhkINVHKM_M: PrivateKey [private].query attacker(InvhkINVHKM_M).
free InvpkINVPM_M: PrivateKey [private].query attacker(InvpkINVPM_M).
free InvskINVSC_C: PrivateKey [private].query attacker(InvskINVSC_C).
free InvhkINVHKC_C: PrivateKey [private].query attacker(InvhkINVHKC_C).
free InvpkINVPC_C: PrivateKey [private].query attacker(InvpkINVPC_C).
free PANCA_Ca: Crypto_ByteArray [private].query attacker(PANCA_Ca).
free NXAUTHCODE_CMa: Crypto_ByteArray [private].query attacker(NXAUTHCODE_CMa).
free PURCHAMT_CMa: Crypto_ByteArray [private].query attacker(PURCHAMT_CMa).
free ORDERDESC_CM: Crypto_ByteArray [private].query attacker(ORDERDESC_CM).
free MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa: bitstring [private].query attacker(MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa).
free NXLIDMNXXID_CMa: bitstring [private].query attacker(NXLIDMNXXID_CMa).
event witness_wauth_PANCA_aC(Crypto_ByteArray,Agent,Agent).
event seen_SQNx3_M(Crypto_ByteArray,Agent).
event seen_SQNx4_C(Crypto_ByteArray,Agent).
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(bitstring,Agent,Agent).
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(bitstring,Agent,Agent).
event seen_SQNx5_M(Crypto_ByteArray,Agent).
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(bitstring,Agent,Agent).
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(bitstring,Agent,Agent).
event witness_auth_NXAUTHCODE_Ma(Crypto_ByteArray,Agent,Agent).
event witness_auth_NXAUTHCODE_Ca(Crypto_ByteArray,Agent,Agent).
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(bitstring,Agent,Agent).
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(bitstring,Agent,Agent).
event seen_SQNx10_a(Crypto_ByteArray,Agent).
event seen_SQNx11_M(Crypto_ByteArray,Agent).
event witness_auth_NXAUTHCODE_CM(Crypto_ByteArray,Agent,Agent).
event seen_SQNx11_C(Crypto_ByteArray,Agent).
event request_auth_NXAUTHCODE_Ca(Crypto_ByteArray,Agent,Agent).
query m: Crypto_ByteArray, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_NXAUTHCODE_Ca(m,a1,a2)) ==> inj-event(witness_auth_NXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ca(m,a1,a2)).
event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(bitstring,Agent,Agent).
query m: bitstring, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(m,a1,a2)) ==> inj-event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca(m,a1,a2)).
event request_auth_NXAUTHCODE_Ma(Crypto_ByteArray,Agent,Agent).
query m: Crypto_ByteArray, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_NXAUTHCODE_Ma(m,a1,a2)) ==> inj-event(witness_auth_NXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_NXAUTHCODE_Ma(m,a1,a2)).
event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(bitstring,Agent,Agent).
query m: bitstring, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(m,a1,a2)) ==> inj-event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma(m,a1,a2)).
event wrequest_wauth_PANCA_aC(Crypto_ByteArray,Agent,Agent).
query m: Crypto_ByteArray, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; event(wrequest_wauth_PANCA_aC(m,a1,a2)) ==> event(witness_wauth_PANCA_aC(m,a1,a2)).
event request_auth_NXAUTHCODE_CM(Crypto_ByteArray,Agent,Agent).
query m: Crypto_ByteArray, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_NXAUTHCODE_CM(m,a1,a2)) ==> inj-event(witness_auth_NXAUTHCODE_CM(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_CM(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_NXAUTHCODE_CM(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_CM(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_NXAUTHCODE_CM(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_NXAUTHCODE_CM(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_NXAUTHCODE_CM(m,a1,a2)).
event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(bitstring,Agent,Agent).
query m: bitstring, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(m,a1,a2)) ==> inj-event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM(m,a1,a2)).
event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(bitstring,Agent,Agent).
query m: bitstring, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(m,a1,a2)) ==> inj-event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC(m,a1,a2)).
event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(bitstring,Agent,Agent).
query m: bitstring, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(m,a1,a2)) ==> inj-event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC(m,a1,a2)).
event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(bitstring,Agent,Agent).
query m: bitstring, a1: Agent, a2: Agent, sqn: Crypto_ByteArray; inj-event(request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(m,a1,a2)) ==> inj-event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(m,a1,a2))
|| inj-event(seen_SQNx3_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(m,a1,a2))
|| inj-event(seen_SQNx4_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(m,a1,a2))
|| inj-event(seen_SQNx5_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(m,a1,a2))
|| inj-event(seen_SQNx10_a(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(m,a1,a2))
|| inj-event(seen_SQNx11_M(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(m,a1,a2))
|| inj-event(seen_SQNx11_C(sqn,a1)) && event(witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM(m,a1,a2)).

(* Process reachability queries *)
event end(Agent).
query event(end(C)).
query event(end(M)).
query event(end(a)).

(* Process a *)
let process_a(C: Agent,M: Agent,pkM: PublicKey,skC: PublicKey,skM: PublicKey,hka: PublicKey,Invpka: PrivateKey,Invska: PrivateKey,Invhka: PrivateKey,honestC: Agent,honestM: Agent) =
if not (a = C) then
(* 	C -> M, @(C|M|M): NxLIDM *)
(* 	M -> C, @(M|C|C): NxXID *)
(* 	C -> M, @(C|M|M): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a] *)
(* 	C -> M, (C|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt,pan(C,a) *)
(* 	M -> a, ^(C|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt,pan(C,a) *)
in(ch,VAR_A_R7: SealedPair);
let VAR_A_DDAR7INVPASC: bitstring = verify_sk(bitstring2SignedObject(dec_pk(VAR_A_R7,Invpka)),skC) in 
if a = proj_1_9_AgeBytBytBytSePBytSePBytByt_Agent(VAR_A_DDAR7INVPASC) then
let VAR_A_DJ79ADDAR7INVPASCINVHKA: SecretKey = bitstring2SecretKey(dec_hk(proj_7_9_AgeBytBytBytSePBytSePBytByt_SealedPair(VAR_A_DDAR7INVPASC),Invhka)) in 
let VAR_A_J69ADDAR7INVPASC: Crypto_ByteArray = proj_6_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC) in 
let VAR_A_J99ADDAR7INVPASC: Crypto_ByteArray = proj_9_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC) in 
if VAR_A_J69ADDAR7INVPASC = hmac(Crypto_ByteArray2bitstring(VAR_A_J99ADDAR7INVPASC),VAR_A_DJ79ADDAR7INVPASCINVHKA) then
let VAR_A_PANCA: Crypto_ByteArray = pan(C,a) in 
if VAR_A_J69ADDAR7INVPASC = hmac(Crypto_ByteArray2bitstring(VAR_A_PANCA),VAR_A_DJ79ADDAR7INVPASCINVHKA) then
if VAR_A_PANCA = VAR_A_J99ADDAR7INVPASC then
new NxAuthCode: Crypto_ByteArray;
event witness_auth_NXAUTHCODE_Ma(NxAuthCode,M,a);
event witness_auth_NXAUTHCODE_Ca(NxAuthCode,C,a);
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca((proj_8_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_2_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_3_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_4_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),hmac(Crypto_ByteArray2bitstring(VAR_A_PANCA),VAR_A_DJ79ADDAR7INVPASCINVHKA),NxAuthCode),C,a);
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma((proj_8_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_2_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_3_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_4_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),hmac(Crypto_ByteArray2bitstring(VAR_A_PANCA),VAR_A_DJ79ADDAR7INVPASCINVHKA),NxAuthCode),M,a);
out(ch,empty);
(* 	M -> a, @(M|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt *)
in(ch,VAR_A_R9: SealedPair);
let VAR_A_DDAR9INVPASM: bitstring = verify_sk(bitstring2SignedObject(dec_pk(VAR_A_R9,Invpka)),skM) in 
event seen_SQNx10_a(proj_2_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray(VAR_A_DDAR9INVPASM),a);
if a = proj_1_9_AgeBytBytBytBytSePBytSePByt_Agent(VAR_A_DDAR9INVPASM) then
let VAR_A_J39ADDAR9INVPASM: Crypto_ByteArray = proj_3_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray(VAR_A_DDAR9INVPASM) in 
if VAR_A_J39ADDAR9INVPASM = proj_2_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC) then
let VAR_A_J49ADDAR9INVPASM: Crypto_ByteArray = proj_4_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray(VAR_A_DDAR9INVPASM) in 
if VAR_A_J49ADDAR9INVPASM = proj_3_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC) then
let VAR_A_J59ADDAR9INVPASM: Crypto_ByteArray = proj_5_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray(VAR_A_DDAR9INVPASM) in 
if VAR_A_J59ADDAR9INVPASM = proj_4_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC) then
let VAR_A_J69ADDAR9INVPASM: SealedPair = proj_6_9_AgeBytBytBytBytSePBytSePByt_SealedPair(VAR_A_DDAR9INVPASM) in 
if VAR_A_J69ADDAR9INVPASM = proj_5_9_AgeBytBytBytSePBytSePBytByt_SealedPair(VAR_A_DDAR7INVPASC) then
let VAR_A_DJ89ADDAR9INVPASMINVHKA: SecretKey = bitstring2SecretKey(dec_hk(proj_8_9_AgeBytBytBytBytSePBytSePByt_SealedPair(VAR_A_DDAR9INVPASM),Invhka)) in 
if VAR_A_J69ADDAR7INVPASC = hmac(Crypto_ByteArray2bitstring(VAR_A_J99ADDAR7INVPASC),VAR_A_DJ89ADDAR9INVPASMINVHKA) then
let VAR_A_MAPANCAADJ89ADDAR9INVPASMINVHKA: Crypto_ByteArray = hmac(Crypto_ByteArray2bitstring(VAR_A_PANCA),VAR_A_DJ89ADDAR9INVPASMINVHKA) in 
if VAR_A_J69ADDAR7INVPASC = VAR_A_MAPANCAADJ89ADDAR9INVPASMINVHKA then
if proj_7_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray(VAR_A_DDAR9INVPASM) = VAR_A_J69ADDAR7INVPASC then
if proj_9_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray(VAR_A_DDAR9INVPASM) = proj_8_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC) then
if VAR_A_DJ89ADDAR9INVPASMINVHKA = VAR_A_DJ79ADDAR7INVPASCINVHKA then
(* 	a -> M, @(a|M,C|M): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],NxAuthCode *)
new SQNx11: Crypto_ByteArray;
out(ch,enc_pk(SignedObject2bitstring(sign_sk((VAR_A_J39ADDAR9INVPASM,VAR_A_J49ADDAR9INVPASM,VAR_A_J59ADDAR9INVPASM,VAR_A_J69ADDAR9INVPASM,VAR_A_MAPANCAADJ89ADDAR9INVPASMINVHKA,enc_hk(SecretKey2bitstring(VAR_A_DJ89ADDAR9INVPASMINVHKA),hka),NxAuthCode,SQNx11,M,C),Invska)),pkM));
(* 	M -> C, ^@(a|M,C|C): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],NxAuthCode *)
out(ch,encS(PrivateKey2bitstring(InvskINVSA_a),fun_goal_INVSA_a(Invska)));
out(ch,encS(PrivateKey2bitstring(InvhkINVHKA_a),fun_goal_INVHKA_a(Invhka)));
out(ch,encS(PrivateKey2bitstring(InvpkINVPA_a),fun_goal_INVPA_a(Invpka)));
(if C = honestC then event wrequest_wauth_PANCA_aC(VAR_A_PANCA,a,C)) |
(if M = honestM then event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM((proj_8_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_2_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_3_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_4_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),hmac(Crypto_ByteArray2bitstring(VAR_A_PANCA),VAR_A_DJ79ADDAR7INVPASCINVHKA)),a,M)) |
(if C = honestC then event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC((proj_8_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_2_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_3_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),proj_4_9_AgeBytBytBytSePBytSePBytByt_Crypto_ByteArray(VAR_A_DDAR7INVPASC),hmac(Crypto_ByteArray2bitstring(VAR_A_PANCA),VAR_A_DJ79ADDAR7INVPASCINVHKA)),a,C)) |
(if C = honestC && M = honestM then out(ch,encS(Crypto_ByteArray2bitstring(NXAUTHCODE_CMa),fun_goal_NXAUTHCODE_CMa(NxAuthCode)))) |
(if C = honestC && M = honestM then out(ch,encS(Crypto_ByteArray2bitstring(PURCHAMT_CMa),fun_goal_PURCHAMT_CMa(proj_9_9_AgeBytBytBytBytSePBytSePByt_Crypto_ByteArray(VAR_A_DDAR9INVPASM))))) |
(if C = honestC && M = honestM then out(ch,encS(MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa,fun_goal_MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa(VAR_A_J59ADDAR9INVPASM,VAR_A_MAPANCAADJ89ADDAR9INVPASMINVHKA)))) |
(if C = honestC && M = honestM then out(ch,encS(NXLIDMNXXID_CMa,fun_goal_NXLIDMNXXID_CMa(VAR_A_J39ADDAR9INVPASM,VAR_A_J49ADDAR9INVPASM)))) |
(if C = honestC then out(ch,encS(Crypto_ByteArray2bitstring(PANCA_Ca),fun_goal_PANCA_Ca(VAR_A_PANCA)))) |
event end(a);
0.

(* Process M *)
let process_M(C: Agent,M: Agent,pkC: PublicKey,pka: PublicKey,skC: PublicKey,ska: PublicKey,hkM: PublicKey,InvpkM: PrivateKey,InvskM: PrivateKey,InvhkM: PrivateKey,honestC: Agent) =
if not (M = C) then
in(ch_priv_M_C,VAR_M_R0: bitstring) [precise];
let VAR_M_J22MR0: Crypto_ByteArray = proj_2_2_BytByt_Crypto_ByteArray(VAR_M_R0) in 
if VAR_M_J22MR0 = VAR_M_J22MR0 then
out(ch_priv_M_C,empty);
(* 	C -> M, @(C|M|M): NxLIDM *)
in(ch,VAR_M_R2: SealedPair);
let VAR_M_DDMR2INVPMSC: bitstring = verify_sk(bitstring2SignedObject(dec_pk(VAR_M_R2,InvpkM)),skC) in 
event seen_SQNx3_M(proj_2_3_BytBytAge_Crypto_ByteArray(VAR_M_DDMR2INVPMSC),M);
if M = proj_3_3_BytBytAge_Agent(VAR_M_DDMR2INVPMSC) then
(* 	M -> C, @(M|C|C): NxXID *)
new NxXID: Crypto_ByteArray;
new SQNx4: Crypto_ByteArray;
out(ch,enc_pk(SignedObject2bitstring(sign_sk((C,SQNx4,NxXID),InvskM)),pkC));
(* 	C -> M, @(C|M|M): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a] *)
in(ch,VAR_M_R4: SealedPair);
let VAR_M_DDMR4INVPMSC: bitstring = verify_sk(bitstring2SignedObject(dec_pk(VAR_M_R4,InvpkM)),skC) in 
event seen_SQNx5_M(proj_7_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray(VAR_M_DDMR4INVPMSC),M);
if M = proj_8_8_BytBytBytSePBytSePBytAge_Agent(VAR_M_DDMR4INVPMSC) then
if NxXID = proj_2_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray(VAR_M_DDMR4INVPMSC) then
let VAR_M_J13MDDMR2INVPMSC: Crypto_ByteArray = proj_1_3_BytBytAge_Crypto_ByteArray(VAR_M_DDMR2INVPMSC) in 
let VAR_M_J18MDDMR4INVPMSC: Crypto_ByteArray = proj_1_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray(VAR_M_DDMR4INVPMSC) in 
if VAR_M_J18MDDMR4INVPMSC = VAR_M_J13MDDMR2INVPMSC then
let VAR_M_J38MDDMR4INVPMSC: Crypto_ByteArray = proj_3_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray(VAR_M_DDMR4INVPMSC) in 
let VAR_M_DJ48MDDMR4INVPMSCINVHKM: SecretKey = bitstring2SecretKey(dec_hk(proj_4_8_BytBytBytSePBytSePBytAge_SealedPair(VAR_M_DDMR4INVPMSC),InvhkM)) in 
let VAR_M_MMJ22MR0DJ48MDDMR4INVPMSCINVHKM: Crypto_ByteArray = hmac(Crypto_ByteArray2bitstring(VAR_M_J22MR0),VAR_M_DJ48MDDMR4INVPMSCINVHKM) in 
if VAR_M_J38MDDMR4INVPMSC = VAR_M_MMJ22MR0DJ48MDDMR4INVPMSCINVHKM then
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aM((proj_1_2_BytByt_Crypto_ByteArray(VAR_M_R0),VAR_M_J18MDDMR4INVPMSC,NxXID,VAR_M_MMJ22MR0DJ48MDDMR4INVPMSCINVHKM,proj_5_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray(VAR_M_DDMR4INVPMSC)),a,M);
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM((proj_1_2_BytByt_Crypto_ByteArray(VAR_M_R0),VAR_M_J18MDDMR4INVPMSC,NxXID,VAR_M_MMJ22MR0DJ48MDDMR4INVPMSCINVHKM,proj_5_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray(VAR_M_DDMR4INVPMSC)),C,M);
out(ch,empty);
(* 	C -> M, (C|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt,pan(C,a) *)
in(ch,VAR_M_R6: SealedPair);
if VAR_M_R6 = VAR_M_R6 then
(* 	M -> a, ^(C|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt,pan(C,a) *)
out(ch,VAR_M_R6);
in(ch,VAR_M_R8: Crypto_ByteArray);
if empty = VAR_M_R8 then
(* 	M -> a, @(M|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt *)
new SQNx10: Crypto_ByteArray;
let VAR_M_J58MDDMR4INVPMSC: Crypto_ByteArray = proj_5_8_BytBytBytSePBytSePBytAge_Crypto_ByteArray(VAR_M_DDMR4INVPMSC) in 
let VAR_M_J68MDDMR4INVPMSC: SealedPair = proj_6_8_BytBytBytSePBytSePBytAge_SealedPair(VAR_M_DDMR4INVPMSC) in 
out(ch,enc_pk(SignedObject2bitstring(sign_sk((a,SQNx10,VAR_M_J18MDDMR4INVPMSC,NxXID,VAR_M_MMJ22MR0DJ48MDDMR4INVPMSCINVHKM,enc_hk(SecretKey2bitstring(VAR_M_DJ48MDDMR4INVPMSCINVHKM),hkM),VAR_M_J58MDDMR4INVPMSC,VAR_M_J68MDDMR4INVPMSC,proj_1_2_BytByt_Crypto_ByteArray(VAR_M_R0)),InvskM)),pka));
(* 	a -> M, @(a|M,C|M): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],NxAuthCode *)
in(ch,VAR_M_R10: SealedPair);
let VAR_M_DDMR10INVPMSA: bitstring = verify_sk(bitstring2SignedObject(dec_pk(VAR_M_R10,InvpkM)),ska) in 
event seen_SQNx11_M(proj_8_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA),M);
if C = proj_10_10_BytBytBytSePBytSePBytBytAgeAge_Agent(VAR_M_DDMR10INVPMSA) then
if M = proj_9_10_BytBytBytSePBytSePBytBytAgeAge_Agent(VAR_M_DDMR10INVPMSA) then
if NxXID = proj_2_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA) then
if proj_1_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA) = VAR_M_J13MDDMR2INVPMSC then
let VAR_M_DJ410MDDMR10INVPMSAINVHKM: SecretKey = bitstring2SecretKey(dec_hk(proj_4_10_BytBytBytSePBytSePBytBytAgeAge_SealedPair(VAR_M_DDMR10INVPMSA),InvhkM)) in 
if VAR_M_J38MDDMR4INVPMSC = hmac(Crypto_ByteArray2bitstring(VAR_M_J22MR0),VAR_M_DJ410MDDMR10INVPMSAINVHKM) then
if proj_3_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA) = VAR_M_J38MDDMR4INVPMSC then
if proj_5_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA) = VAR_M_J58MDDMR4INVPMSC then
if proj_6_10_BytBytBytSePBytSePBytBytAgeAge_SealedPair(VAR_M_DDMR10INVPMSA) = VAR_M_J68MDDMR4INVPMSC then
if VAR_M_DJ410MDDMR10INVPMSAINVHKM = VAR_M_DJ48MDDMR4INVPMSCINVHKM then
(* 	M -> C, ^@(a|M,C|C): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],NxAuthCode *)
event witness_auth_NXAUTHCODE_CM(proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA),C,M);
out(ch,enc_pk(SignedObject2bitstring(bitstring2SignedObject(dec_pk(VAR_M_R10,InvpkM))),pkC));
event request_auth_NXAUTHCODE_Ma(proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA),M,a);
event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ma((proj_1_2_BytByt_Crypto_ByteArray(VAR_M_R0),VAR_M_J18MDDMR4INVPMSC,NxXID,hmac(Crypto_ByteArray2bitstring(VAR_M_J22MR0),VAR_M_DJ410MDDMR10INVPMSAINVHKM),proj_5_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA),proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA)),M,a);
out(ch,encS(PrivateKey2bitstring(InvskINVSM_M),fun_goal_INVSM_M(InvskM)));
out(ch,encS(PrivateKey2bitstring(InvhkINVHKM_M),fun_goal_INVHKM_M(InvhkM)));
out(ch,encS(PrivateKey2bitstring(InvpkINVPM_M),fun_goal_INVPM_M(InvpkM)));
(if C = honestC then event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC((proj_1_2_BytByt_Crypto_ByteArray(VAR_M_R0),VAR_M_J18MDDMR4INVPMSC,NxXID,VAR_M_MMJ22MR0DJ48MDDMR4INVPMSCINVHKM,VAR_M_J58MDDMR4INVPMSC),M,C)) |
(if C = honestC then out(ch,encS(Crypto_ByteArray2bitstring(NXAUTHCODE_CMa),fun_goal_NXAUTHCODE_CMa(proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA))))) |
(if C = honestC then out(ch,encS(Crypto_ByteArray2bitstring(PURCHAMT_CMa),fun_goal_PURCHAMT_CMa(proj_1_2_BytByt_Crypto_ByteArray(VAR_M_R0))))) |
(if C = honestC then out(ch,encS(Crypto_ByteArray2bitstring(ORDERDESC_CM),fun_goal_ORDERDESC_CM(VAR_M_J22MR0)))) |
(if C = honestC then out(ch,encS(MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa,fun_goal_MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa(hmac(Crypto_ByteArray2bitstring(VAR_M_J22MR0),VAR_M_DJ410MDDMR10INVPMSAINVHKM),proj_5_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_M_DDMR10INVPMSA))))) |
(if C = honestC then out(ch,encS(NXLIDMNXXID_CMa,fun_goal_NXLIDMNXXID_CMa(VAR_M_J18MDDMR4INVPMSC,NxXID)))) |
event end(M);
0.

(* Process C *)
let process_C(C: Agent,M: Agent,pkM: PublicKey,pka: PublicKey,skM: PublicKey,ska: PublicKey,hkM: PublicKey,hka: PublicKey,InvpkC: PrivateKey,InvskC: PrivateKey,InvhkC: PrivateKey,honestM: Agent) =
if not (C = a) then
if not (C = M) then
event witness_wauth_PANCA_aC(pan(C,a),a,C);
new PurchAmt: Crypto_ByteArray;
new OrderDesc: Crypto_ByteArray;
out(ch_priv_M_C,(PurchAmt,OrderDesc));
in(ch_priv_M_C,VAR_C_R1: Crypto_ByteArray) [precise];
if empty = VAR_C_R1 then
(* 	C -> M, @(C|M|M): NxLIDM *)
new NxLIDM: Crypto_ByteArray;
new SQNx3: Crypto_ByteArray;
out(ch,enc_pk(SignedObject2bitstring(sign_sk((NxLIDM,SQNx3,M),InvskC)),pkM));
(* 	M -> C, @(M|C|C): NxXID *)
in(ch,VAR_C_R3: SealedPair);
let VAR_C_DDCR3INVPCSM: bitstring = verify_sk(bitstring2SignedObject(dec_pk(VAR_C_R3,InvpkC)),skM) in 
event seen_SQNx4_C(proj_2_3_AgeBytByt_Crypto_ByteArray(VAR_C_DDCR3INVPCSM),C);
if C = proj_1_3_AgeBytByt_Agent(VAR_C_DDCR3INVPCSM) then
(* 	C -> M, @(C|M|M): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a] *)
new Hx5apanCa: SecretKey;
new Hx5MOrderDesc: SecretKey;
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_aC((PurchAmt,NxLIDM,proj_3_3_AgeBytByt_Crypto_ByteArray(VAR_C_DDCR3INVPCSM),hmac(Crypto_ByteArray2bitstring(OrderDesc),Hx5MOrderDesc),hmac(Crypto_ByteArray2bitstring(pan(C,a)),Hx5apanCa)),a,C);
event witness_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_MC((PurchAmt,NxLIDM,proj_3_3_AgeBytByt_Crypto_ByteArray(VAR_C_DDCR3INVPCSM),hmac(Crypto_ByteArray2bitstring(OrderDesc),Hx5MOrderDesc),hmac(Crypto_ByteArray2bitstring(pan(C,a)),Hx5apanCa)),M,C);
new SQNx5: Crypto_ByteArray;
let VAR_C_EHX5APANCAHKA: SealedPair = enc_hk(SecretKey2bitstring(Hx5apanCa),hka) in 
let VAR_C_EHX5MORDERDESCHKM: SealedPair = enc_hk(SecretKey2bitstring(Hx5MOrderDesc),hkM) in 
let VAR_C_J33CDDCR3INVPCSM: Crypto_ByteArray = proj_3_3_AgeBytByt_Crypto_ByteArray(VAR_C_DDCR3INVPCSM) in 
let VAR_C_MORDERDESCHX5MORDERDESC: Crypto_ByteArray = hmac(Crypto_ByteArray2bitstring(OrderDesc),Hx5MOrderDesc) in 
let VAR_C_MPANCAHX5APANCA: Crypto_ByteArray = hmac(Crypto_ByteArray2bitstring(pan(C,a)),Hx5apanCa) in 
out(ch,enc_pk(SignedObject2bitstring(sign_sk((NxLIDM,VAR_C_J33CDDCR3INVPCSM,VAR_C_MORDERDESCHX5MORDERDESC,VAR_C_EHX5MORDERDESCHKM,VAR_C_MPANCAHX5APANCA,VAR_C_EHX5APANCAHKA,SQNx5,M),InvskC)),pkM));
in(ch,VAR_C_R5: Crypto_ByteArray);
if empty = VAR_C_R5 then
(* 	C -> M, (C|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt,pan(C,a) *)
out(ch,enc_pk(SignedObject2bitstring(sign_sk((a,NxLIDM,VAR_C_J33CDDCR3INVPCSM,VAR_C_MORDERDESCHX5MORDERDESC,VAR_C_EHX5MORDERDESCHKM,VAR_C_MPANCAHX5APANCA,VAR_C_EHX5APANCAHKA,PurchAmt,pan(C,a)),InvskC)),pka));
(* 	M -> a, ^(C|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt,pan(C,a) *)
(* 	M -> a, @(M|a|a): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],PurchAmt *)
(* 	a -> M, @(a|M,C|M): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],NxAuthCode *)
(* 	M -> C, ^@(a|M,C|C): NxLIDM,NxXID,[OrderDesc:M],[pan(C,a):a],NxAuthCode *)
in(ch,VAR_C_R11: SealedPair);
let VAR_C_DDCR11INVPCSA: bitstring = verify_sk(bitstring2SignedObject(dec_pk(VAR_C_R11,InvpkC)),ska) in 
event seen_SQNx11_C(proj_8_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA),C);
if C = proj_10_10_BytBytBytSePBytSePBytBytAgeAge_Agent(VAR_C_DDCR11INVPCSA) then
if M = proj_9_10_BytBytBytSePBytSePBytBytAgeAge_Agent(VAR_C_DDCR11INVPCSA) then
if NxLIDM = proj_1_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA) then
if VAR_C_J33CDDCR3INVPCSM = proj_2_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA) then
if VAR_C_MORDERDESCHX5MORDERDESC = proj_3_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA) then
if VAR_C_MPANCAHX5APANCA = proj_5_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA) then
event request_auth_NXAUTHCODE_Ca(proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA),C,a);
event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCANXAUTHCODE_Ca((PurchAmt,NxLIDM,VAR_C_J33CDDCR3INVPCSM,VAR_C_MORDERDESCHX5MORDERDESC,VAR_C_MPANCAHX5APANCA,proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA)),C,a);
out(ch,encS(PrivateKey2bitstring(InvskINVSC_C),fun_goal_INVSC_C(InvskC)));
out(ch,encS(PrivateKey2bitstring(InvhkINVHKC_C),fun_goal_INVHKC_C(InvhkC)));
out(ch,encS(PrivateKey2bitstring(InvpkINVPC_C),fun_goal_INVPC_C(InvpkC)));
out(ch,encS(Crypto_ByteArray2bitstring(PANCA_Ca),fun_goal_PANCA_Ca(pan(C,a))));
(if M = honestM then event request_auth_NXAUTHCODE_CM(proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA),C,M)) |
(if M = honestM then event request_auth_PURCHAMTNXLIDMNXXIDMORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CM((PurchAmt,NxLIDM,VAR_C_J33CDDCR3INVPCSM,VAR_C_MORDERDESCHX5MORDERDESC,VAR_C_MPANCAHX5APANCA),C,M)) |
(if M = honestM then out(ch,encS(Crypto_ByteArray2bitstring(NXAUTHCODE_CMa),fun_goal_NXAUTHCODE_CMa(proj_7_10_BytBytBytSePBytSePBytBytAgeAge_Crypto_ByteArray(VAR_C_DDCR11INVPCSA))))) |
(if M = honestM then out(ch,encS(Crypto_ByteArray2bitstring(PURCHAMT_CMa),fun_goal_PURCHAMT_CMa(PurchAmt)))) |
(if M = honestM then out(ch,encS(Crypto_ByteArray2bitstring(ORDERDESC_CM),fun_goal_ORDERDESC_CM(OrderDesc)))) |
(if M = honestM then out(ch,encS(MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa,fun_goal_MORDERDESCHX5MORDERDESCMPANCAHX5APANCA_CMa(VAR_C_MORDERDESCHX5MORDERDESC,VAR_C_MPANCAHX5APANCA)))) |
(if M = honestM then out(ch,encS(NXLIDMNXXID_CMa,fun_goal_NXLIDMNXXID_CMa(NxLIDM,VAR_C_J33CDDCR3INVPCSM)))) |
event end(C);
0.

(* Process SET_Rev *)
let process_SET_Rev(C: Agent,M: Agent,pka: PublicKey,ska: PublicKey,hka: PublicKey,Invpka: PrivateKey,Invska: PrivateKey,Invhka: PrivateKey) =
(!in(ch,XC: Agent);
in(ch,XM: Agent);
process_a(XC,XM,pk(priv_pk(XM)),sk(priv_sk(XC)),sk(priv_sk(XM)),hka,Invpka,Invska,Invhka,C,M)) |
(!in(ch,XC: Agent);
process_M(XC,M,pk(priv_pk(XC)),pka,sk(priv_sk(XC)),ska,hk(priv_hk(M)),priv_pk(M),priv_sk(M),priv_hk(M),C)) |
(!in(ch,XM: Agent);
process_C(C,XM,pk(priv_pk(XM)),pka,sk(priv_sk(XM)),ska,hk(priv_hk(XM)),hka,priv_pk(C),priv_sk(C),priv_hk(C),M)).

(* Initialisation process *)
process
(!new X: Agent;
out(ch,X);
out(ch,priv_pk(X));
out(ch,priv_hk(X));
out(ch,priv_sk(X));
out(ch,pan(X,a))
) | (
out(ch,C);
out(ch,M);
out(ch,pk(priv_pk(C)));
out(ch,pk(priv_pk(M)));
out(ch,sk(priv_sk(C)));
out(ch,sk(priv_sk(M)));
out(ch,hk(priv_hk(C)));
out(ch,hk(priv_hk(M)));
new Invpka: PrivateKey;
new Invska: PrivateKey;
new Invhka: PrivateKey;
let pka = pk(Invpka) in out(ch,pka);
let hka = hk(Invhka) in out(ch,hka);
let ska = sk(Invska) in out(ch,ska);
process_SET_Rev(C,M,pka,ska,hka,Invpka,Invska,Invhka) | process_SET_Rev(M,C,pka,ska,hka,Invpka,Invska,Invhka))