Protocol: ISOsymKeyTwoPassMutualAuthProt

--- AnB Actions  ---
	A -> B: {|NA,B,Text1|}shk(A,B)
	B -> A: {|NB,A,Text3|}shk(A,B)

--- CustomTypes  ---
[]

--- Constants  ---
[(JConstant JNonce,"tag")]

--- Shares ---
[(share,(JSymmetricKey,"ShkAB"),shk(<A,B>),[(JAgent,"A"),(JAgent,"B")])]

--- Agree ---
[]

--- Equations ---

--- Methods ---

--- Roles ---
[(JAgent,"A"),(JAgent,"B")]

--- Docker Roles ---
[((JAgent,"B"),2,1,[55555],JDHonest),((JAgent,"A"),1,2,[],JDHonest)]

--- Inactive Agents ---
[]

--- Steps ---
[0,1,2,99]

--- Channels ---
((JAgent,"B"),Insecure,(JAgent,"A"),ipv4 0 0 0 0,55555,Server,"A -> B - 169.254.124.239 -> 169.254.124.239:55555")
((JAgent,"A"),Insecure,(JAgent,"B"),ipv4 169 254 124 239,55555,Client,"B -> A - 169.254.124.239:55555 -> 169.254.124.239")

--- RoleFields ---
((JAgent,"B"),RoleField {rolename = "tag", typeofvar = JConstant JNonce, pars = "\"tag\"", static = True, know = True})
((JAgent,"A"),RoleField {rolename = "tag", typeofvar = JConstant JNonce, pars = "\"tag\"", static = True, know = True})
((JAgent,"A"),RoleField {rolename = "ShkAB", typeofvar = JSymmetricKey, pars = "", static = False, know = True})
((JAgent,"B"),RoleField {rolename = "ShkAB", typeofvar = JSymmetricKey, pars = "", static = False, know = True})
((JAgent,"A"),RoleField {rolename = "NA", typeofvar = JNonce, pars = "", static = False, know = False})
((JAgent,"B"),RoleField {rolename = "NB", typeofvar = JNonce, pars = "", static = False, know = False})
((JAgent,"A"),RoleField {rolename = "Text1", typeofvar = JNonce, pars = "", static = False, know = False})
((JAgent,"B"),RoleField {rolename = "Text3", typeofvar = JNonce, pars = "", static = False, know = False})
((JAgent,"A"),RoleField {rolename = "VAR_A_SHKAB", typeofvar = JSymmetricKey, pars = "", static = False, know = False})
((JAgent,"B"),RoleField {rolename = "VAR_B_R0", typeofvar = SealedObject (AnBxParams [JNonce,JAgent,JNonce]), pars = "", static = False, know = False})
((JAgent,"B"),RoleField {rolename = "VAR_B_SHKAB", typeofvar = JSymmetricKey, pars = "", static = False, know = False})
((JAgent,"A"),RoleField {rolename = "VAR_A_R1", typeofvar = SealedObject (AnBxParams [JNonce,JAgent,JNonce]), pars = "", static = False, know = False})

--- Actions ---
A|0: new (JNonce,"Text1")
A|0(0): witness((JNonce,"_wauth_TEXT1_BA"),Text1,[((JAgent,"B"),B),((JAgent,"A"),A)])
A|0: new (JNonce,"NA")
A|0: (JSymmetricKey,"VAR_A_SHKAB") : JSymmetricKey
A|0: send(JAgent,SealedObject (AnBxParams [JNonce,JAgent,JNonce])) 	 # ch: ((JAgent,"A"),Insecure,(JAgent,"B"),ipv4 169 254 124 239,55555,Client,"B -> A - 169.254.124.239:55555 -> 169.254.124.239")
B|0: VAR_B_R0 (SealedObject (AnBxParams [JNonce,JAgent,JNonce])) = receive() 	 # ch: ((JAgent,"B"),Insecure,(JAgent,"A"),ipv4 0 0 0 0,55555,Server,"A -> B - 169.254.124.239 -> 169.254.124.239:55555")
B|0: (JSymmetricKey,"VAR_B_SHKAB") : JSymmetricKey
B|0.1: eq(B,proj[2/3][decS(VAR_B_R0,VAR_B_SHKAB)])
B|1: new (JNonce,"Text3")
B|1(1): witness((JNonce,"_wauth_TEXT3_AB"),Text3,[((JAgent,"A"),A),((JAgent,"B"),B)])
B|1: new (JNonce,"NB")
B|1: send(JAgent,SealedObject (AnBxParams [JNonce,JAgent,JNonce])) 	 # ch: ((JAgent,"B"),Insecure,(JAgent,"A"),ipv4 0 0 0 0,55555,Server,"A -> B - 169.254.124.239 -> 169.254.124.239:55555")
A|1: VAR_A_R1 (SealedObject (AnBxParams [JNonce,JAgent,JNonce])) = receive() 	 # ch: ((JAgent,"A"),Insecure,(JAgent,"B"),ipv4 169 254 124 239,55555,Client,"B -> A - 169.254.124.239:55555 -> 169.254.124.239")
A|1.1: eq(A,proj[2/3][decS(VAR_A_R1,VAR_A_SHKAB)])
A|99(1): wrequest((JNonce,"_wauth_TEXT3_AB"),proj[3/3][decS(VAR_A_R1,VAR_A_SHKAB)],[((JAgent,"A"),A),((JAgent,"B"),B)])
B|99(0): wrequest((JNonce,"_wauth_TEXT1_BA"),proj[3/3][decS(VAR_B_R0,VAR_B_SHKAB)],[((JAgent,"B"),B),((JAgent,"A"),A)])
