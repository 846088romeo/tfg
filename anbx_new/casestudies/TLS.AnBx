Protocol: TLS AnB # Bounded-verified

# AnBx: the AnBx model requires some changes in order to generate a runnable Java model
# 1) initialisation phase (certificate requests/issues) 
# must be explicit, in order to have an active server (s)
# when generating the Java implementation
# 2) clientK,serverK must be implemented explicitly in the Functions.st template file

Types: 
	Agent A,B,s;
	Number NA,NB,Sid,PA,PB,PMS,empty;
	Function [Agent -> PublicKey] pk,sk;
    Function [Untyped -> Number] hash;
	Function [Number,Number,Number -> SymmetricKey] prf;
	Function [Number,Number,SymmetricKey -> SymmetricKey] clientK,serverK

Knowledge: 
	A: A,B,s,sk(s),sk(A),inv(sk(A)),hash,clientK,serverK,prf;
	B: B,s,sk(s),pk(B),sk(s),inv(pk(B)),hash,serverK,clientK,prf,empty;
	s: s,A,B,pk,sk,sk(s),inv(sk(s))

Actions:
    
    # protocol setup - certificate issue 
	s -> B: {B,pk(B)}inv(sk(s))	
	B -> s: empty
    s -> A: {A,sk(A)}inv(sk(s))
	
	# protocol run
	A -> B: A,NA,Sid,PA
	B -> A: NB,Sid,PB,
		  {B,pk(B)}inv(sk(s))
	A -> B: {A,sk(A)}inv(sk(s)),
			  {PMS}pk(B),
		  {hash(NB,B,PMS)}inv(sk(A)),
		  {|hash(prf(PMS,NA,NB),A,B,NA,NB,Sid,PA,PB,PMS)|}clientK(NA,NB,prf(PMS,NA,NB))
	B -> A: {|hash(prf(PMS,NA,NB),A,B,NA,NB,Sid,PA,PB,PMS)|}serverK(NA,NB,prf(PMS,NA,NB))
			  
Goals:
	B authenticates A on prf(PMS,NA,NB)
	A authenticates B on prf(PMS,NA,NB)
	prf(PMS,NA,NB) secret between A,B



