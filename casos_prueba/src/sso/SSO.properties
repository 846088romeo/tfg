# Protocol: SSO
#  Configuration File: "../../genAnBx/src/sso/SSO.properties"
# AnBx Compiler and Code Generator - Version 2024.08
# -----------------------------
# Roles/Share
# -----------------------------
ROLESHARE = ROLE_C
# Aliases for agents C,SP,idp from the point of view of ROLE_x
ROLE_C = alice,bob,charlie
ROLE_SP = alice,bob,charlie
ROLE_idp = alice,bob,charlie
# -----------------------------
# Channels
# -----------------------------
# C *->* SP - 127.0.0.1 *->* 127.0.0.1:55556
ROLE_SP_channel_ROLE_C_Server_Secure_role = Server
ROLE_SP_channel_ROLE_C_Server_Secure_host = 0.0.0.0
ROLE_SP_channel_ROLE_C_Server_Secure_port = 55556
ROLE_SP_channel_ROLE_C_Server_Secure_type = SSL_SECURE
# SP *->* C - 127.0.0.1:55556 *->* 127.0.0.1
ROLE_C_channel_ROLE_SP_Client_Secure_role = Client
ROLE_C_channel_ROLE_SP_Client_Secure_host = 127.0.0.1
ROLE_C_channel_ROLE_SP_Client_Secure_port = 55556
ROLE_C_channel_ROLE_SP_Client_Secure_type = SSL_SECURE
# C *->* idp - 127.0.0.1 *->* 127.0.0.1:55558
ROLE_idp_channel_ROLE_C_Server_Secure_role = Server
ROLE_idp_channel_ROLE_C_Server_Secure_host = 0.0.0.0
ROLE_idp_channel_ROLE_C_Server_Secure_port = 55558
ROLE_idp_channel_ROLE_C_Server_Secure_type = SSL_SECURE
# idp *->* C - 127.0.0.1:55558 *->* 127.0.0.1
ROLE_C_channel_ROLE_idp_Client_Secure_role = Client
ROLE_C_channel_ROLE_idp_Client_Secure_host = 127.0.0.1
ROLE_C_channel_ROLE_idp_Client_Secure_port = 55558
ROLE_C_channel_ROLE_idp_Client_Secure_type = SSL_SECURE
# -----------------------------
# Paths
# -----------------------------
keypath = ../../keystore/
sharepath = ./
anbxjpath = ../../../AnBxJ/modified
# -----------------------------
# Cryptographic Engine Settings
# -----------------------------
# Java Cryptography Architecture (JCA) Reference Guide
# For more information, refer to the JCA Reference Guide:
# https://docs.oracle.com/en/java/javase/21/security/java-cryptography-architecture-jca-reference-guide.html
# see names at
# Java 21 - https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html
# Information about cryptographic specifications can also be found at:
# Bouncy Castle - https://www.bouncycastle.org/documentation/specification_interoperability/#algorithms-and-key-types
#
# Note: Signature Algorithms and (Asymmetric Encryption) Cipher Algorithms
# are automatically detected from the keys used, which are pre-memorized in the keystore
#
# -----------------------------
# Cipher scheme used for encryption, including algorithm name, mode, and padding, separated by /
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#cipher-algorithm-names
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#cipher-algorithm-modes
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#cipher-algorithm-paddings
cipherScheme = AES/CBC/PKCS5Padding
# Key length in bits for ciphers supporting different key lengths
keySize = 256
# -----------------------------
# Key generator algorithm for dynamic key generation in symmetric encryption
keyGenerationScheme = AES
# Key length in bits for dynamic symmetric key generation, for ciphers supporting different key lengths 
keyGenerationSize = 256
# -----------------------------
# Secret Key Factory algorithm used for Password-Based Encryption (PBE) dynamic symmetric key generation
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.htmld#secretkeyfactory-algorithms
keyGenerationSchemePBE = PBKDF2WithHmacSHA512
# -----------------------------
# Key Pair Generator algorithm for dynamic creation of asymmetric key pairs
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#keypairgenerator-algorithms
keyPairGenerationScheme = RSA
# Key length for dynamic creation of asymmetric key pairs
keyPairGenerationSize = 2048
# -----------------------------
# SecureRandom Number Generation Algorithm
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms
secureRandomAlgorithm = DRBG
# -----------------------------
# (H)MAC Algorithm, used for key generation
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#mac-algorithms
hMacAlgorithm = HmacSHA256
# -----------------------------
# MessageDigest Algorithm (Hash)
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#messagedigest-algorithms
messageDigestAlgorithm = SHA-256
# -----------------------------
# Key Agreement Algorithm, used for key exchange (e.g., Diffie-Hellman)
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#keyagreement-algorithms
keyAgreementAlgorithm = DH
# Key Pair Generation for Key Agreement Algorithm, used for key exchange (e.g., Diffie-Hellman)
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.html#keypairgenerator-algorithms
keyAgreementKeyPairGenerationScheme = DH
# Length in bits for random exponents in Diffie-Hellman key agreement
dhRndExpSize = 4096
# The elliptic curve used for ECDH key agreement
# https://docs.oracle.com/en/java/javase/21/docs/specs/security/standard-names.htmlparameterspec-names
ecGenParameterSpec = secp256r1
# -----------------------------
# Asymmetric encryption scheme block mode (experimental feature)
asymcipherSchemeBlock = RSA
# SSLContext Algorithm
sslContext = TLSv1.3
# -----------------------------
# Java Security provider: default uses the java.security settings (preferred option)
# Or select a specific provider (e.g., 'BC' for Bouncy Castle)
securityProvider = default
# Optional: Specific Java Security providers for different schemes
# These settings will override the securityProvider value if uncommented
# cipherSchemeProvider = default
# keyGenerationSchemeProvider = default
# keyGenerationSchemePBEProvider = default
# keyPairGenerationSchemeProvider = default
# secureRandomProvider = default
# hmacProvider = default
# messageDigestProvider = default
# signatureProvider = default
# asymEncProvider = default
# keyAgreementProvider = default
# sslContextProvider = default
