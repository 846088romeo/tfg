Protocol: ISOpubKeyTwoPassMutualAuthProtBwauthA_intr_attack

Types:
    Agent A, B, s, intr;
    Number NxNA, NxNB, Text1, Text3, empty;
    Function [Agent -> PublicKey] sk;

Knowledge:
    A: A, B, s, sk(A), inv(sk(A)), sk(s);
    B: B, A, s, sk(B), inv(sk(B)), sk(s);
    s: A, B, s, sk(s), inv(sk(s)), sk(A), sk(B);
    intr: intr, A, B, s, sk(intr), inv(sk(intr)), sk(s);
    A, s share sk(A), sk(s);
    B, s share sk(B), sk(s);

Actions:
#    // === Primera Sesión === (Interceptar certificados)
    s -> intr: {A, sk(A)}inv(sk(s))
    intr -> A: {A, sk(A)}inv(sk(s))
    A -> intr: empty
    intr -> s: empty
    s -> intr: {B, sk(B)}inv(sk(s))
    intr -> B: {B, sk(B)}inv(sk(s))
    B -> intr: empty
    intr -> A: empty
    
#    // === Segunda Sesión === (Ataque MITM)
    A -> intr: {A, sk(A)}inv(sk(s)), {NxNA, B, Text1}inv(sk(A)) 
    intr -> B: {A, sk(A)}inv(sk(s)), {NxNA, B, Text1}inv(sk(A)) 
    B -> intr: {B, sk(B)}inv(sk(s)), {NxNB, A, Text3}inv(sk(B))  
#    // intr NO reenvía este mensaje a A (ataque exitoso)

Goals:
    B weakly authenticates A on Text1
    A weakly authenticates B on Text3